name: 'Let Secret Detector'
on:
  push:
    branches:
      - '*'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  scan:
    runs-on: ubuntu-latest
    env:
      # LETSECRET_PASSWORD: "password123"
      LETSECRET_SECRETS: ${{ secrets.LETSECRET_SECRETS }}  # 其实是1到9（123...9）
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout Codes
        uses: actions/checkout@v2

      - name: New Commit
        if: github.event_name == 'push'
        env: 
          COMMIT_SHA: ${{ github.sha }}
        run: |
          source scripts/scanAllFiles.sh
          if [[ $(find "/tmp/scan_result/$COMMIT_SHA" -type f) ]]; then
            echo "::warning file=README.md,line=1::secrets detected"
            exit 1
          fi

      - name: PR - (re)opened
        if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened')
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO_FULL_NAME: ${{ github.repository }}
        run: |
          source scripts/getPrCommits_ALL.sh
          hasLeak=false
          while IFS= read -r commit_hash; do
            export COMMIT_SHA="$commit_hash"
            source scripts/scanAllFiles.sh
            if [[ $(find "/tmp/scan_result/$COMMIT_SHA" -type f) ]]; then
              echo "::warning::secrets detected in commit $COMMIT_SHA"
              hasLeak=true
            fi
          done < /tmp/pr_commits_all.txt
          echo "hasLeak=$hasLeak" >> $GITHUB_ENV
      
      - name: PR - synchronize
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          BEFORE_SHA: ${{ github.event.before }}
          AFTER_SHA: ${{ github.event.after }}
        run: |
          source scripts/getPrCommits_NEW.sh
          hasLeak=false
          while IFS= read -r commit_hash; do
            export COMMIT_SHA="$commit_hash"
            source scripts/scanAllFiles.sh
            if [[ $(find "/tmp/scan_result/$COMMIT_SHA" -type f) ]]; then
              echo "::warning::secrets detected in commit $COMMIT_SHA"
              hasLeak=true
            fi
          done < /tmp/pr_commits_new.txt
          echo "hasLeak=$hasLeak" >> $GITHUB_ENV
      
      - name: PR - generate Commit Message
        if: env.hasLeak == 'true'
        id: generate-comment
        env:
          REPO_FULL_NAME: ${{ github.repository }}
        run: |
          source scripts/generate1Commit.sh
          COMMENT_BODY=$(cat /tmp/comment_body.txt)
          echo "commentBody<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMENT_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: PR - Commit
        if: env.hasLeak == 'true'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: '${{ steps.generate-comment.outputs.commentBody }}'
            })


# name: Let Secret Check
# on: [push, pull_request]

# permissions:
#   contents: read
#   issues: write  # 授权Token可写评论

# jobs:
#   scan:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
        
#       - uses: LetMeFly666/secret-monitor@master
#         with:
#           custom_prefix: "MySecret_"  # 可选自定义前缀
#         env:
#           MySecret_DB_PASSWORD: "password123"        # 文本密钥
#           MySecret_IP_REGEX: |
#             /\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/ # 正则表达式