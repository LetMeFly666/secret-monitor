# 这是我写的yml，请你帮忙检查其中是否有错误
# 现在先实现一个新开PR，待会儿再实现往已有PR上新增commit
name: PR Commit Info

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  get-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install jq
        run: sudo apt-get install -y jq
      
      - name: Get ALL PR commits (DEBUG MODE)
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO_FULL_NAME=${{ github.repository }}
          APIURL="https://api.github.com/repos/$REPO_FULL_NAME/pulls/$PR_NUMBER/commits"

          echo "===== [Debug] TRY USING GH ====="
          # TODO: not login?
          # https://docs.github.com/zh/rest/pulls/pulls?apiVersion=2022-11-28#list-commits-on-a-pull-request
          GH_APIURI="/repos/$REPO_FULL_NAME/pulls/$PR_NUMBER/commits"
          echo "GH_APIURI: $GH_APIURI"
          RESPONSE=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            $GH_APIURI)
          echo "API Response:"
          echo "$RESPONSE"
          
          # echo "===== [Debug] RAW API RESPONSE ====="
          # # 禁用 curl 的失败退出，强制输出原始响应（包括错误）
          # curl -v -s -H "Authorization: Bearer $GITHUB_TOKEN" "$APIURL" > response.json 2> curl.log || true
          
          # echo "===== [Debug] HTTP Status Code ====="
          # grep "HTTP/" curl.log | tail -n 1

          # echo "===== [Debug] Response Body ====="
          # cat response.json

          # echo "===== [Debug] Full Curl Log ====="
          # cat curl.log
      
      - name: Get NEW PR commits (if synchronize)
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "NEW PR commit(s) found"


# name: Let Secret Check
# on: [push, pull_request]

# permissions:
#   contents: read
#   issues: write  # 授权Token可写评论

# jobs:
#   scan:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
        
#       - uses: LetMeFly666/secret-monitor@master
#         with:
#           custom_prefix: "MySecret_"  # 可选自定义前缀
#         env:
#           MySecret_DB_PASSWORD: "password123"        # 文本密钥
#           MySecret_IP_REGEX: |
#             /\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b/ # 正则表达式