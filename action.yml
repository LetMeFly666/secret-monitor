name: 'Let Secret Monitor'
description: 'Detect secrets in commits/PRs or full repository scan'

inputs:
  custom_prefix:
    description: '自定义环境变量前缀'
    required: false
    default: 'LetSecret'
  scan_mode:
    description: '扫描模式 (diff/all)'
    required: false
    default: 'all'

runs:
  using: "composite"
  steps:
    - name: Checkout code
      shell: bash
      run: |
        if [ "${{ inputs.scan_mode }}" = "all" ]; then
          git fetch --prune --unshallow 2> /dev/null || true
        else
          git fetch --depth=1
        fi

    - name: Secret Detection
      shell: bash
      run: |
        set +e
        source ${{ github.action_path }}/entrypoint.sh
        exit_code=$?
        set -e

        # 结果记录到环境变量
        echo "cat scan_result.txt at action.yml #36"
        cat scan_result.txt
        echo "exit_code"
        echo "$exit_code"

        if [ -s scan_result.txt ]; then
          echo "HAS_LEAKS=true" >> $GITHUB_ENV
        else
          echo "HAS_LEAKS=false" >> $GITHUB_ENV
        fi
        
        # 始终返回成功以保证后续步骤执行
        exit 0
      continue-on-error: true
      env:
        CUSTOM_PREFIX: ${{ inputs.custom_prefix }}
        SCAN_MODE: ${{ inputs.scan_mode }}
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Post PR Comment
      if: ${{ env.HAS_LEAKS == 'true' && github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          try {
            const results = fs.readFileSync('scan_result.txt', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `⚠️ 检测到敏感信息：\n${results}`
            });
          } catch (e) {
            core.error(`评论失败: ${e}`);
          }

    - name: Check Results
      shell: bash
      run: |
        if [ "$HAS_LEAKS" = "true" ]; then
          echo "::error::发现敏感信息，流程终止"
          exit 1
        fi