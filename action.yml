name: 'Let Secret Monitor'
description: 'Detect secrets in commits/PRs or full repository scan'

inputs:
  custom_prefix:
    description: '自定义环境变量前缀'
    required: false
    default: 'LetSecret'
  scan_mode:
    description: '扫描模式 (diff/all)'
    required: false
    default: 'all'
  github_token:
    description: 'GitHub Token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      shell: bash
      run: |
        fetch_depth=1
        if [ "${{ inputs.scan_mode }}" = "all" ]; then
          fetch_depth=0
        fi
        git fetch --depth=$fetch_depth
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Secret Detection
      shell: bash
      run: |
        set +e  # 禁用自动报错退出
        
        SCAN_MODE="${{ inputs.scan_mode }}"
        source ${{ github.action_path }}/entrypoint.sh
        
        # 记录检测结果
        if [ -n "$LEAKED_SECRETS" ]; then
          echo "::error::发现敏感信息"
          echo "HAS_LEAKS=true" >> $GITHUB_ENV
        else
          echo "HAS_LEAKS=false" >> $GITHUB_ENV
        fi
        
        echo "$LEAKED_SECRETS" > scan_result.txt
        exit 0  # 强制返回成功状态码
      continue-on-error: true  # 允许后续步骤执行
      env:
        CUSTOM_PREFIX: ${{ inputs.custom_prefix }}
        SCAN_MODE: ${{ inputs.scan_mode }}
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - name: Post PR Comment
      if: ${{ env.HAS_LEAKS == 'true' && github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs')
          try {
            const results = fs.readFileSync('scan_result.txt', 'utf8')
            const comment = `⚠️ **安全警报** ⚠️
              扫描模式: ${process.env.SCAN_MODE}
              检测到以下敏感信息：
              ${results}`
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })
          } catch (e) {
            core.error("评论失败: " + e.message)
          }